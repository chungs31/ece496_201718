-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xillybus_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_empty_n : IN STD_LOGIC;
    in_r_read : OUT STD_LOGIC;
    out_r_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_full_n : IN STD_LOGIC;
    out_r_write : OUT STD_LOGIC;
    debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
    debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    debug_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of xillybus_wrapper is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "xillybus_wrapper,hls_ip_2017_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.532000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=24,HLS_SYN_FF=4861,HLS_SYN_LUT=3381}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv8_83 : STD_LOGIC_VECTOR (7 downto 0) := "10000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv29_1FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111111111111111";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal p_str3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_ce0 : STD_LOGIC;
    signal p_str3_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_ce0 : STD_LOGIC;
    signal p_str4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_str5_ce0 : STD_LOGIC;
    signal p_str5_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_s_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_s_ce0 : STD_LOGIC;
    signal hls_ref_4oPi_table_s_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal hls_hotbm_second_o_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_hotbm_second_o_2_ce0 : STD_LOGIC;
    signal hls_hotbm_second_o_2_q0 : STD_LOGIC_VECTOR (29 downto 0);
    signal hls_hotbm_second_o_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_hotbm_second_o_3_ce0 : STD_LOGIC;
    signal hls_hotbm_second_o_3_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_hotbm_second_o_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_hotbm_second_o_ce0 : STD_LOGIC;
    signal hls_hotbm_second_o_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_r_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_reg_1141 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal out_r_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_0_rec_i9_reg_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_i_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i_fu_360_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_reg_1145 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_load_cast_fu_366_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str3_load_cast_reg_1150 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal x1_reg_1155 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_i3_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_1176 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i8_fu_390_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_rec_i8_reg_1180 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_load_cast_fu_396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str4_load_cast_reg_1185 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_str5_load_cast_fu_414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str5_load_cast_reg_1198 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal results_sign_V_1_reg_1203 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_425_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1209 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_434_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1216 : STD_LOGIC_VECTOR (22 downto 0);
    signal closepath_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_1222 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_472_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_reg_1233 : STD_LOGIC_VECTOR (3 downto 0);
    signal Med_V_reg_1241 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_10_i_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_reg_1256 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_reg_1262 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_13_i_i_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_fu_555_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_reg_1273 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_Val2_7_fu_570_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_7_reg_1279 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Result_i2_i_i_reg_1284 : STD_LOGIC_VECTOR (28 downto 0);
    signal Mx_V_reg_1289 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal Ex_V_fu_659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_reg_1296 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_fu_692_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_reg_1320 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal cos_basis_fu_730_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal p_Val2_12_fu_761_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_12_reg_1333 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_i1_i_reg_1338 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_i_i_reg_1358 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_Val2_15_reg_1363 : STD_LOGIC_VECTOR (28 downto 0);
    signal hls_hotbm_second_o_5_reg_1368 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_hotbm_second_o_7_reg_1373 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_29_i_i_reg_1378 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_31_i_i_reg_1383 : STD_LOGIC_VECTOR (13 downto 0);
    signal Mx_V_read_assign_fu_855_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal Mx_V_read_assign_reg_1388 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal r_V_fu_876_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_reg_1393 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal result_V_reg_1408 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal r_V_1_fu_915_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_1413 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_scaled_fixed2ieee_fu_328_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_1418 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_scaled_fixed2ieee_fu_328_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_328_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_328_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_328_ap_ready : STD_LOGIC;
    signal grp_xilly_decprint_fu_334_ap_start : STD_LOGIC;
    signal grp_xilly_decprint_fu_334_ap_done : STD_LOGIC;
    signal grp_xilly_decprint_fu_334_ap_idle : STD_LOGIC;
    signal grp_xilly_decprint_fu_334_ap_ready : STD_LOGIC;
    signal grp_xilly_decprint_fu_334_debug_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xilly_decprint_fu_334_debug_out_ap_vld : STD_LOGIC;
    signal p_0_rec_i_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_5_fu_370_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_rec_i2_reg_303 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_6_fu_400_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_17_fu_482_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_xilly_decprint_fu_334_ap_start : STD_LOGIC := '0';
    signal p_0_rec_i_cast_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_rec_i2_cast_fu_379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_rec_i9_cast_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_i_i_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_i_i_fu_789_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_fu_476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_28_fu_1111_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal expv_op_i_fu_443_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_V_fu_449_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_457_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_i_i_i_fu_491_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_4_fu_494_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal p_Result_21_fu_510_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_524_p0 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_fu_524_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_524_p2 : STD_LOGIC_VECTOR (103 downto 0);
    signal tmp_10_fu_561_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_fu_565_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_i_i_fu_587_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_22_fu_599_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_23_fu_606_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_24_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mx_zeros_V_fu_632_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_i_i_fu_636_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_9_fu_640_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal storemerge_i_i_fu_592_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_i_i_fu_655_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_i_cast_fu_683_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_i_i_fu_686_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_i_cast_fu_702_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_21_i_i_fu_708_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_20_i_i_fu_705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_cast1_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_i_i_cast_fu_713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_i_i_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ssdm_int_V_write_ass_fu_723_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_basis_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_fu_751_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_25_fu_781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_fu_1122_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_fu_824_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_1_fu_824_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_1_fu_824_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_6_fu_1129_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_32_i_i_fu_861_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_33_i_i_fu_864_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_16_fu_867_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_35_i_i_cast_fu_873_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_888_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_888_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Ex_V_ret_i_fu_894_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_1_fu_911_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_18_fu_922_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_27_fu_947_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_953_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_991_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_26_fu_925_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_29_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond_i_demorg_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond_i_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_i_cast_fu_1074_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_fu_933_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_i_cast_fu_1095_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_3_fu_943_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_s_fu_1057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_1087_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_4_fu_1103_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_fu_1122_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal OP1_V_3_fu_796_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_13_fu_1122_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_6_fu_1129_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_524_p00 : STD_LOGIC_VECTOR (103 downto 0);
    signal grp_fu_524_p10 : STD_LOGIC_VECTOR (103 downto 0);
    signal grp_fu_888_p10 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_1_fu_824_p10 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_6_fu_1129_p00 : STD_LOGIC_VECTOR (29 downto 0);

    component scaled_fixed2ieee IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (28 downto 0);
        prescale : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xilly_decprint IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        val_r : IN STD_LOGIC_VECTOR (31 downto 0);
        debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        debug_out_ap_vld : OUT STD_LOGIC );
    end component;


    component xillybus_wrapper_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (79 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (103 downto 0) );
    end component;


    component xillybus_wrapper_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component xillybus_wrapper_mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        din16 : IN STD_LOGIC_VECTOR (0 downto 0);
        din17 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component xillybus_wrapper_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component xillybus_wrapper_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component xillybus_wrapper_ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    p_str3_U : component xillybus_wrapper_cud
    generic map (
        DataWidth => 7,
        AddressRange => 14,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str3_address0,
        ce0 => p_str3_ce0,
        q0 => p_str3_q0);

    p_str4_U : component xillybus_wrapper_dEe
    generic map (
        DataWidth => 7,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str4_address0,
        ce0 => p_str4_ce0,
        q0 => p_str4_q0);

    p_str5_U : component xillybus_wrapper_eOg
    generic map (
        DataWidth => 4,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str5_address0,
        ce0 => p_str5_ce0,
        q0 => p_str5_q0);

    hls_ref_4oPi_table_s_U : component xillybus_wrapper_fYi
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_ref_4oPi_table_s_address0,
        ce0 => hls_ref_4oPi_table_s_ce0,
        q0 => hls_ref_4oPi_table_s_q0);

    hls_hotbm_second_o_2_U : component xillybus_wrapper_g8j
    generic map (
        DataWidth => 30,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_hotbm_second_o_2_address0,
        ce0 => hls_hotbm_second_o_2_ce0,
        q0 => hls_hotbm_second_o_2_q0);

    hls_hotbm_second_o_3_U : component xillybus_wrapper_hbi
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_hotbm_second_o_3_address0,
        ce0 => hls_hotbm_second_o_3_ce0,
        q0 => hls_hotbm_second_o_3_q0);

    hls_hotbm_second_o_U : component xillybus_wrapper_ibs
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_hotbm_second_o_address0,
        ce0 => hls_hotbm_second_o_ce0,
        q0 => hls_hotbm_second_o_q0);

    grp_scaled_fixed2ieee_fu_328 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_328_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_328_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_328_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_328_ap_ready,
        in_V => result_V_reg_1408,
        prescale => r_V_1_reg_1413,
        ap_return => grp_scaled_fixed2ieee_fu_328_ap_return);

    grp_xilly_decprint_fu_334 : component xilly_decprint
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xilly_decprint_fu_334_ap_start,
        ap_done => grp_xilly_decprint_fu_334_ap_done,
        ap_idle => grp_xilly_decprint_fu_334_ap_idle,
        ap_ready => grp_xilly_decprint_fu_334_ap_ready,
        val_r => x1_reg_1155,
        debug_ready => debug_ready,
        debug_out => grp_xilly_decprint_fu_334_debug_out,
        debug_out_ap_vld => grp_xilly_decprint_fu_334_debug_out_ap_vld);

    xillybus_wrapper_jbC_U7 : component xillybus_wrapper_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 80,
        din1_WIDTH => 24,
        dout_WIDTH => 104)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_524_p0,
        din1 => grp_fu_524_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_524_p2);

    xillybus_wrapper_kbM_U8 : component xillybus_wrapper_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_1,
        din8 => ap_const_lv1_0,
        din9 => p_Val2_s_reg_1273,
        dout => cos_basis_fu_730_p10);

    xillybus_wrapper_lbW_U9 : component xillybus_wrapper_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 29,
        dout_WIDTH => 58)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_reg_1393,
        din1 => grp_fu_888_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_888_p2);

    xillybus_wrapper_mb6_U10 : component xillybus_wrapper_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_1,
        din8 => ap_const_lv1_0,
        din9 => ap_const_lv1_0,
        din10 => ap_const_lv1_1,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_1,
        din13 => ap_const_lv1_1,
        din14 => ap_const_lv1_0,
        din15 => ap_const_lv1_0,
        din16 => ap_const_lv1_0,
        din17 => p_Result_27_fu_947_p3,
        dout => tmp_fu_953_p18);

    xillybus_wrapper_mb6_U11 : component xillybus_wrapper_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_1,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_0,
        din8 => ap_const_lv1_1,
        din9 => ap_const_lv1_1,
        din10 => ap_const_lv1_0,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_1,
        din13 => ap_const_lv1_0,
        din14 => ap_const_lv1_1,
        din15 => ap_const_lv1_0,
        din16 => ap_const_lv1_0,
        din17 => p_Result_27_fu_947_p3,
        dout => tmp_1_fu_991_p18);

    xillybus_wrapper_ncg_U12 : component xillybus_wrapper_ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        din0 => p_Val2_13_fu_1122_p0,
        din1 => p_Val2_13_fu_1122_p1,
        dout => p_Val2_13_fu_1122_p2);

    xillybus_wrapper_ocq_U13 : component xillybus_wrapper_ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        din0 => p_Val2_6_fu_1129_p0,
        din1 => hls_hotbm_second_o_7_reg_1373,
        dout => p_Val2_6_fu_1129_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scaled_fixed2ieee_fu_328_ap_ready)) then 
                    ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_xilly_decprint_fu_334_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_xilly_decprint_fu_334_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = tmp_i3_reg_1176))) then 
                    ap_reg_grp_xilly_decprint_fu_334_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xilly_decprint_fu_334_ap_ready)) then 
                    ap_reg_grp_xilly_decprint_fu_334_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_0_rec_i2_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = tmp_6_fu_400_p1))) then 
                p_0_rec_i2_reg_303 <= p_rec_i8_reg_1180;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (in_r_empty_n = ap_const_logic_1))) then 
                p_0_rec_i2_reg_303 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_0_rec_i9_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = tmp_17_fu_482_p1))) then 
                p_0_rec_i9_reg_314 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_xilly_decprint_fu_334_ap_done = ap_const_logic_1))) then 
                p_0_rec_i9_reg_314 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    p_0_rec_i_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_5_fu_370_p1))) then 
                p_0_rec_i_reg_292 <= p_rec_i_reg_1145;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                p_0_rec_i_reg_292 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                Ex_V_reg_1296 <= Ex_V_fu_659_p2;
                Mx_V_reg_1289 <= p_Val2_9_fu_640_p2(57 downto 29);
                isNeg_reg_1302 <= Ex_V_fu_659_p2(7 downto 7);
                tmp_11_i_reg_1314 <= tmp_11_i_fu_678_p2;
                tmp_9_i_reg_1308 <= tmp_9_i_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                Med_V_reg_1241 <= r_V_4_fu_494_p2(99 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                Mx_V_read_assign_reg_1388 <= Mx_V_read_assign_fu_855_p3;
                r_V_reg_1393 <= r_V_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = p_0_rec_i9_reg_314) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))))) then
                closepath_reg_1222 <= closepath_fu_437_p2;
                loc_V_1_reg_1216 <= loc_V_1_fu_434_p1;
                loc_V_reg_1209 <= tmp_18_reg_1164(30 downto 23);
                results_sign_V_1_reg_1203 <= tmp_18_reg_1164(31 downto 31);
                tmp_9_reg_1233 <= tmp_9_fu_472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                cos_basis_reg_1326 <= cos_basis_fu_730_p10;
                p_Val2_12_reg_1333 <= p_Val2_12_fu_761_p1;
                tmp_i1_i_reg_1338 <= ssdm_int_V_write_ass_fu_723_p3(21 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                hls_hotbm_second_o_5_reg_1368 <= hls_hotbm_second_o_3_q0;
                hls_hotbm_second_o_7_reg_1373 <= hls_hotbm_second_o_q0;
                p_Val2_15_reg_1363 <= hls_hotbm_second_o_2_q0(29 downto 1);
                tmp_24_i_i_reg_1358 <= p_Val2_13_fu_1122_p2(29 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                p_Result_i2_i_i_reg_1284 <= p_Val2_7_fu_570_p3(57 downto 29);
                p_Val2_7_reg_1279 <= p_Val2_7_fu_570_p3;
                p_Val2_s_reg_1273 <= p_Val2_s_fu_555_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                p_Val2_5_reg_1262 <= grp_fu_524_p2(76 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                p_rec_i8_reg_1180 <= p_rec_i8_fu_390_p2;
                tmp_i3_reg_1176 <= tmp_i3_fu_384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_rec_i_reg_1145 <= p_rec_i_fu_360_p2;
                tmp_i_reg_1141 <= tmp_i_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and not(((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n))))) then
                    p_str3_load_cast_reg_1150(6 downto 0) <= p_str3_load_cast_fu_366_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    p_str4_load_cast_reg_1185(6 downto 0) <= p_str4_load_cast_fu_396_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))))) then
                    p_str5_load_cast_reg_1198(3 downto 0) <= p_str5_load_cast_fu_414_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                r_V_1_reg_1413 <= r_V_1_fu_915_p2;
                result_V_reg_1408 <= grp_fu_888_p2(57 downto 29);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (grp_scaled_fixed2ieee_fu_328_ap_done = ap_const_logic_1))) then
                resultf_reg_1418 <= grp_scaled_fixed2ieee_fu_328_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                sh_assign_reg_1320 <= sh_assign_fu_692_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_10_i_reg_1256 <= tmp_10_i_fu_530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (closepath_reg_1222 = ap_const_lv1_0))) then
                tmp_13_i_i_reg_1268 <= grp_fu_524_p2(79 downto 77);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (in_r_empty_n = ap_const_logic_1))) then
                tmp_18_reg_1164 <= in_r_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                tmp_29_i_i_reg_1378 <= p_Val2_1_fu_824_p2(44 downto 23);
                tmp_31_i_i_reg_1383 <= p_Val2_6_fu_1129_p2(29 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i_reg_1141 = ap_const_lv1_1) and not(((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n))))) then
                x1_reg_1155 <= in_r_dout;
            end if;
        end if;
    end process;
    p_str3_load_cast_reg_1150(7) <= '0';
    p_str4_load_cast_reg_1185(7) <= '0';
    p_str5_load_cast_reg_1198(7 downto 4) <= "0000";

    ap_NS_fsm_assign_proc : process (in_r_empty_n, out_r_full_n, ap_CS_fsm, ap_CS_fsm_state3, tmp_i_reg_1141, ap_CS_fsm_state5, ap_CS_fsm_state11, p_0_rec_i9_reg_314, ap_CS_fsm_state29, tmp_i3_reg_1176, ap_CS_fsm_state7, ap_CS_fsm_state28, grp_scaled_fixed2ieee_fu_328_ap_done, grp_xilly_decprint_fu_334_ap_done, ap_CS_fsm_state4, tmp_5_fu_370_p1, ap_CS_fsm_state8, tmp_6_fu_400_p1, ap_CS_fsm_state9, ap_CS_fsm_state12, tmp_17_fu_482_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and not(((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n))) and (tmp_i_reg_1141 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i_reg_1141 = ap_const_lv1_1) and not(((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n))))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_5_fu_370_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (in_r_empty_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_i3_reg_1176 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = tmp_6_fu_400_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_xilly_decprint_fu_334_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))) and (p_0_rec_i9_reg_314 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = p_0_rec_i9_reg_314) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = tmp_17_fu_482_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (grp_scaled_fixed2ieee_fu_328_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (out_r_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Ex_V_fu_659_p2 <= std_logic_vector(unsigned(storemerge_i_i_fu_592_p3) - unsigned(tmp_17_i_i_fu_655_p1));
    Mx_V_read_assign_fu_855_p3 <= 
        ap_const_lv29_1FFFFFFF when (cos_basis_reg_1326(0) = '1') else 
        Mx_V_reg_1289;
    Mx_zeros_V_fu_632_p1 <= val_assign_fu_624_p3(5 - 1 downto 0);
    OP1_V_3_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_i_reg_1338),30));
    addr_V_fu_449_p3 <= 
        ap_const_lv8_3F when (closepath_fu_437_p2(0) = '1') else 
        expv_op_i_fu_443_p2;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_assign_proc : process(out_r_full_n, p_0_rec_i9_reg_314)
    begin
                ap_block_state11 <= ((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n));
    end process;


    ap_block_state3_assign_proc : process(in_r_empty_n, tmp_i_reg_1141)
    begin
                ap_block_state3 <= ((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n));
    end process;

    closepath_fu_437_p2 <= "1" when (unsigned(loc_V_fu_425_p4) < unsigned(ap_const_lv8_7E)) else "0";

    debug_out_assign_proc : process(p_str3_load_cast_reg_1150, p_str4_load_cast_reg_1185, p_str5_load_cast_reg_1198, grp_xilly_decprint_fu_334_debug_out, grp_xilly_decprint_fu_334_debug_out_ap_vld, ap_CS_fsm_state4, tmp_5_fu_370_p1, ap_CS_fsm_state8, tmp_6_fu_400_p1, ap_CS_fsm_state9, ap_CS_fsm_state12, tmp_17_fu_482_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = tmp_17_fu_482_p1))) then 
            debug_out <= p_str5_load_cast_reg_1198;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = tmp_6_fu_400_p1))) then 
            debug_out <= p_str4_load_cast_reg_1185;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_5_fu_370_p1))) then 
            debug_out <= p_str3_load_cast_reg_1150;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_xilly_decprint_fu_334_debug_out_ap_vld))) then 
            debug_out <= grp_xilly_decprint_fu_334_debug_out;
        else 
            debug_out <= "XXXXXXXX";
        end if; 
    end process;


    debug_out_ap_vld_assign_proc : process(grp_xilly_decprint_fu_334_debug_out_ap_vld, ap_CS_fsm_state4, tmp_5_fu_370_p1, ap_CS_fsm_state8, tmp_6_fu_400_p1, ap_CS_fsm_state9, ap_CS_fsm_state12, tmp_17_fu_482_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = tmp_5_fu_370_p1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = tmp_6_fu_400_p1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = tmp_17_fu_482_p1)))) then 
            debug_out_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            debug_out_ap_vld <= grp_xilly_decprint_fu_334_debug_out_ap_vld;
        else 
            debug_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    expv_op_i_fu_443_p2 <= std_logic_vector(signed(ap_const_lv8_C2) + signed(loc_V_fu_425_p4));
    grp_fu_524_p0 <= grp_fu_524_p00(80 - 1 downto 0);
    grp_fu_524_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Med_V_reg_1241),104));
    grp_fu_524_p1 <= grp_fu_524_p10(24 - 1 downto 0);
    grp_fu_524_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_fu_510_p3),104));
    grp_fu_888_p1 <= grp_fu_888_p10(29 - 1 downto 0);
    grp_fu_888_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_read_assign_reg_1388),58));
    grp_scaled_fixed2ieee_fu_328_ap_start <= ap_reg_grp_scaled_fixed2ieee_fu_328_ap_start;
    grp_xilly_decprint_fu_334_ap_start <= ap_reg_grp_xilly_decprint_fu_334_ap_start;
    hls_hotbm_second_o_2_address0 <= tmp_27_i_i_fu_789_p1(8 - 1 downto 0);

    hls_hotbm_second_o_2_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            hls_hotbm_second_o_2_ce0 <= ap_const_logic_1;
        else 
            hls_hotbm_second_o_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_hotbm_second_o_3_address0 <= tmp_27_i_i_fu_789_p1(8 - 1 downto 0);

    hls_hotbm_second_o_3_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            hls_hotbm_second_o_3_ce0 <= ap_const_logic_1;
        else 
            hls_hotbm_second_o_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_hotbm_second_o_address0 <= tmp_27_i_i_fu_789_p1(8 - 1 downto 0);

    hls_hotbm_second_o_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            hls_hotbm_second_o_ce0 <= ap_const_logic_1;
        else 
            hls_hotbm_second_o_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_ref_4oPi_table_s_address0 <= tmp_3_i_i_i_fu_467_p1(4 - 1 downto 0);

    hls_ref_4oPi_table_s_ce0_assign_proc : process(out_r_full_n, ap_CS_fsm_state11, p_0_rec_i9_reg_314)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))))) then 
            hls_ref_4oPi_table_s_ce0 <= ap_const_logic_1;
        else 
            hls_ref_4oPi_table_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_blk_n_assign_proc : process(in_r_empty_n, ap_CS_fsm_state3, tmp_i_reg_1141, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i_reg_1141 = ap_const_lv1_1)) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            in_r_blk_n <= in_r_empty_n;
        else 
            in_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_read_assign_proc : process(in_r_empty_n, ap_CS_fsm_state3, tmp_i_reg_1141, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i_reg_1141 = ap_const_lv1_1) and not(((tmp_i_reg_1141 = ap_const_lv1_1) and (ap_const_logic_0 = in_r_empty_n)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (in_r_empty_n = ap_const_logic_1)))) then 
            in_r_read <= ap_const_logic_1;
        else 
            in_r_read <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_fu_434_p1 <= tmp_18_reg_1164(23 - 1 downto 0);
    loc_V_2_fu_933_p4 <= p_Val2_18_fu_922_p1(30 downto 23);
    loc_V_3_fu_943_p1 <= p_Val2_18_fu_922_p1(23 - 1 downto 0);
    loc_V_fu_425_p4 <= tmp_18_reg_1164(30 downto 23);
    not_or_cond_i_demorg_fu_1064_p2 <= (tmp_9_i_reg_1308 and tmp_10_i_reg_1256);
    not_or_cond_i_fu_1068_p2 <= (not_or_cond_i_demorg_fu_1064_p2 xor ap_const_lv1_1);
    not_tmp_i_fu_1046_p2 <= (tmp_11_i_reg_1314 xor ap_const_lv1_1);
    or_cond_i_fu_1042_p2 <= (tmp_9_i_reg_1308 and tmp_10_i_reg_1256);

    out_r_blk_n_assign_proc : process(out_r_full_n, ap_CS_fsm_state11, p_0_rec_i9_reg_314, ap_CS_fsm_state29)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = p_0_rec_i9_reg_314)) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            out_r_blk_n <= out_r_full_n;
        else 
            out_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_din_assign_proc : process(out_r_full_n, ap_CS_fsm_state11, p_0_rec_i9_reg_314, ap_CS_fsm_state29, y1_fu_476_p2, p_Result_28_fu_1111_p4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (out_r_full_n = ap_const_logic_1))) then 
            out_r_din <= p_Result_28_fu_1111_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = p_0_rec_i9_reg_314) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n))))) then 
            out_r_din <= y1_fu_476_p2;
        else 
            out_r_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_write_assign_proc : process(out_r_full_n, ap_CS_fsm_state11, p_0_rec_i9_reg_314, ap_CS_fsm_state29)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = p_0_rec_i9_reg_314) and not(((ap_const_lv1_1 = p_0_rec_i9_reg_314) and (ap_const_logic_0 = out_r_full_n)))) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_r_full_n = ap_const_logic_1)))) then 
            out_r_write <= ap_const_logic_1;
        else 
            out_r_write <= ap_const_logic_0;
        end if; 
    end process;

    p_0_rec_i2_cast_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_rec_i2_reg_303),32));
    p_0_rec_i9_cast_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_rec_i9_reg_314),32));
    p_0_rec_i_cast_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_rec_i_reg_292),32));
    p_Ex_V_ret_i_fu_894_p3 <= 
        ap_const_lv8_0 when (cos_basis_reg_1326(0) = '1') else 
        Ex_V_reg_1296;
    p_Result_1_i_cast_fu_1074_p3 <= 
        ap_const_lv8_FF when (not_or_cond_i_fu_1068_p2(0) = '1') else 
        ap_const_lv8_0;
    p_Result_21_fu_510_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1216);
    p_Result_22_fu_599_p3 <= (p_Result_i2_i_i_reg_1284 & ap_const_lv1_1);
    
    p_Result_23_fu_606_p4_proc : process(p_Result_22_fu_599_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable p_Result_23_fu_606_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1D(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Result_22_fu_599_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_1D(5-1 downto 0)));
            for p_Result_23_fu_606_p4_i in 0 to 30-1 loop
                v0_cpy(p_Result_23_fu_606_p4_i) := p_Result_22_fu_599_p3(30-1-p_Result_23_fu_606_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(30-1 downto 0)))));
        res_mask := res_mask(30-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_23_fu_606_p4 <= resvalue(30-1 downto 0);
    end process;

    p_Result_24_fu_616_p3 <= (ap_const_lv2_3 & p_Result_23_fu_606_p4);
    p_Result_25_fu_781_p3 <= (sin_basis_fu_775_p2 & p_Result_i_i_fu_751_p4);
    p_Result_26_fu_925_p3 <= p_Val2_18_fu_922_p1(31 downto 31);
    p_Result_27_fu_947_p3 <= (results_sign_V_1_reg_1203 & p_Val2_s_reg_1273);
    p_Result_28_fu_1111_p4 <= ((p_Result_s_fu_1057_p3 & ret_V_3_fu_1087_p3) & ret_V_4_fu_1103_p3);
    p_Result_2_i_cast_fu_1095_p3 <= 
        ap_const_lv23_7FFFFF when (not_or_cond_i_fu_1068_p2(0) = '1') else 
        ap_const_lv23_0;
    p_Result_i_29_fu_1051_p2 <= (p_Result_i_fu_1036_p2 and not_tmp_i_fu_1046_p2);
    p_Result_i_fu_1036_p2 <= (tmp_8_i_fu_1029_p3 or p_Result_26_fu_925_p3);
    p_Result_i_i_fu_751_p4 <= ssdm_int_V_write_ass_fu_723_p3(28 downto 22);
    p_Result_s_fu_1057_p3 <= 
        results_sign_V_1_reg_1203 when (or_cond_i_fu_1042_p2(0) = '1') else 
        p_Result_i_29_fu_1051_p2;
    p_Val2_12_fu_761_p1 <= ssdm_int_V_write_ass_fu_723_p3(22 - 1 downto 0);
    p_Val2_13_fu_1122_p0 <= OP1_V_3_fu_796_p1(15 - 1 downto 0);
    p_Val2_13_fu_1122_p1 <= OP1_V_3_fu_796_p1(15 - 1 downto 0);
    p_Val2_16_fu_867_p2 <= std_logic_vector(signed(tmp_32_i_i_fu_861_p1) + signed(tmp_33_i_i_fu_864_p1));
    p_Val2_18_fu_922_p1 <= resultf_reg_1418;
    p_Val2_1_fu_824_p0 <= hls_hotbm_second_o_5_reg_1368;
    p_Val2_1_fu_824_p1 <= p_Val2_1_fu_824_p10(22 - 1 downto 0);
    p_Val2_1_fu_824_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_12_reg_1333),45));
    p_Val2_1_fu_824_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_1_fu_824_p0) * signed('0' &p_Val2_1_fu_824_p1))), 45));
    p_Val2_6_fu_1129_p0 <= p_Val2_6_fu_1129_p00(15 - 1 downto 0);
    p_Val2_6_fu_1129_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_i_i_reg_1358),30));
    p_Val2_7_fu_570_p3 <= 
        p_Val2_i_i_fu_565_p2 when (tmp_10_fu_561_p1(0) = '1') else 
        p_Val2_5_reg_1262;
    p_Val2_9_fu_640_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_7_reg_1279),to_integer(unsigned('0' & tmp_14_i_i_fu_636_p1(31-1 downto 0)))));
    p_Val2_i_i_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv58_0) - unsigned(p_Val2_5_reg_1262));
    p_Val2_s_fu_555_p3 <= 
        ap_const_lv3_0 when (closepath_reg_1222(0) = '1') else 
        tmp_13_i_i_reg_1268;
    p_i_i_fu_587_p2 <= std_logic_vector(signed(ap_const_lv8_83) + signed(loc_V_reg_1209));
    p_rec_i8_fu_390_p2 <= std_logic_vector(unsigned(p_0_rec_i2_reg_303) + unsigned(ap_const_lv2_1));
    p_rec_i_fu_360_p2 <= std_logic_vector(unsigned(p_0_rec_i_reg_292) + unsigned(ap_const_lv4_1));
    p_str3_address0 <= p_0_rec_i_cast_fu_349_p1(4 - 1 downto 0);

    p_str3_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_str3_ce0 <= ap_const_logic_1;
        else 
            p_str3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str3_load_cast_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_str3_q0),8));
    p_str4_address0 <= p_0_rec_i2_cast_fu_379_p1(2 - 1 downto 0);

    p_str4_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_str4_ce0 <= ap_const_logic_1;
        else 
            p_str4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str4_load_cast_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_str4_q0),8));
    p_str5_address0 <= p_0_rec_i9_cast_fu_409_p1(1 - 1 downto 0);

    p_str5_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_str5_ce0 <= ap_const_logic_1;
        else 
            p_str5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str5_load_cast_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_str5_q0),8));
    r_V_1_fu_915_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(rhs_V_1_fu_911_p1));
    r_V_4_fu_494_p2 <= std_logic_vector(shift_left(unsigned(hls_ref_4oPi_table_s_q0),to_integer(unsigned('0' & tmp_5_i_i_i_fu_491_p1(31-1 downto 0)))));
    r_V_fu_876_p2 <= std_logic_vector(unsigned(p_Val2_16_fu_867_p2) + unsigned(tmp_35_i_i_cast_fu_873_p1));
    ret_V_3_fu_1087_p3 <= 
        p_Result_1_i_cast_fu_1074_p3 when (tmp_2_fu_1082_p2(0) = '1') else 
        loc_V_2_fu_933_p4;
    ret_V_4_fu_1103_p3 <= 
        p_Result_2_i_cast_fu_1095_p3 when (tmp_2_fu_1082_p2(0) = '1') else 
        loc_V_3_fu_943_p1;
        rhs_V_1_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Ex_V_ret_i_fu_894_p3),9));

        sh_assign_2_i_cast1_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_reg_1320),32));

        sh_assign_2_i_cast_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_reg_1320),29));

    sh_assign_fu_692_p3 <= 
        tmp_19_i_i_fu_686_p2 when (isNeg_reg_1302(0) = '1') else 
        sh_i_cast_fu_683_p1;
        sh_i_cast_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Ex_V_reg_1296),9));

    sin_basis_fu_775_p2 <= (cos_basis_fu_730_p10 xor ap_const_lv1_1);
    ssdm_int_V_write_ass_fu_723_p3 <= 
        tmp_21_i_i_cast_fu_713_p1 when (isNeg_reg_1302(0) = '1') else 
        tmp_22_i_i_fu_717_p2;
    storemerge_i_i_fu_592_p3 <= 
        p_i_i_fu_587_p2 when (closepath_reg_1222(0) = '1') else 
        ap_const_lv8_0;
    tmp_10_fu_561_p1 <= p_Val2_s_fu_555_p3(1 - 1 downto 0);
    tmp_10_i_fu_530_p2 <= "1" when (loc_V_1_reg_1216 = ap_const_lv23_0) else "0";
    tmp_11_i_fu_678_p2 <= "1" when (loc_V_reg_1209 = ap_const_lv8_FF) else "0";
    tmp_14_i_i_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_fu_632_p1),58));
    tmp_17_fu_482_p1 <= debug_ready(1 - 1 downto 0);
    tmp_17_i_i_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_fu_632_p1),8));
    tmp_19_i_i_fu_686_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sh_i_cast_fu_683_p1));
    tmp_20_i_i_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_reg_1289),32));
    tmp_21_i_i_cast_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_i_i_fu_708_p2),32));
    tmp_21_i_i_fu_708_p2 <= std_logic_vector(shift_right(unsigned(Mx_V_reg_1289),to_integer(unsigned('0' & sh_assign_2_i_cast_fu_702_p1(29-1 downto 0)))));
    tmp_22_i_i_fu_717_p2 <= std_logic_vector(shift_left(unsigned(tmp_20_i_i_fu_705_p1),to_integer(unsigned('0' & sh_assign_2_i_cast1_fu_699_p1(31-1 downto 0)))));
    tmp_27_i_i_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_fu_781_p3),32));
    tmp_2_fu_1082_p2 <= (or_cond_i_fu_1042_p2 or tmp_11_i_reg_1314);
        tmp_32_i_i_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_15_reg_1363),30));

        tmp_33_i_i_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_i_i_reg_1378),30));

        tmp_35_i_i_cast_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_31_i_i_reg_1383),30));

    tmp_3_i_i_i_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_457_p4),32));
    tmp_4_fu_457_p4 <= addr_V_fu_449_p3(7 downto 4);
    tmp_5_fu_370_p1 <= debug_ready(1 - 1 downto 0);
    tmp_5_i_i_i_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1233),100));
    tmp_6_fu_400_p1 <= debug_ready(1 - 1 downto 0);
    tmp_8_i_fu_1029_p3 <= 
        tmp_fu_953_p18 when (cos_basis_reg_1326(0) = '1') else 
        tmp_1_fu_991_p18;
    tmp_9_fu_472_p1 <= addr_V_fu_449_p3(4 - 1 downto 0);
    tmp_9_i_fu_673_p2 <= "1" when (loc_V_reg_1209 = ap_const_lv8_0) else "0";
    tmp_i3_fu_384_p2 <= "1" when (p_0_rec_i2_reg_303 = ap_const_lv2_3) else "0";
    tmp_i_fu_354_p2 <= "1" when (p_0_rec_i_reg_292 = ap_const_lv4_D) else "0";
    
    val_assign_fu_624_p3_proc : process(p_Result_24_fu_616_p3)
    begin
        val_assign_fu_624_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_24_fu_616_p3(i) = '1' then
                val_assign_fu_624_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    y1_fu_476_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(x1_reg_1155));
end behav;
